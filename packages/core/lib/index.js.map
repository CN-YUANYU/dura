{"version":3,"file":"index.js","sources":["../src/defineStoreSlice.ts","../src/duraStoreSlice.ts","../src/index.ts"],"sourcesContent":["import type {\n  JsonObject,\n  ReducersMapOfStoreSlice,\n  EffectsMapOfStoreSlice,\n  StoreSlice,\n} from '@dura/types';\n\nexport type WrapStoreSlice<N, S, R, E> = {\n  namespace: N;\n  state: S;\n  reducers: {\n    [K in keyof R]: R[K] extends (...args: infer PP) => infer RR\n      ? (state: S, action: any) => void\n      : R[K];\n  };\n  effects: E;\n};\n\nexport function defineStoreSlice<\n  N extends string,\n  S extends JsonObject,\n  R extends ReducersMapOfStoreSlice<S>,\n  E extends EffectsMapOfStoreSlice\n>(store: StoreSlice<N, S, R, E>): StoreSlice<N, S, R, E> {\n  return store;\n}\n","import { defineStoreSlice } from './defineStoreSlice';\n\nexport default defineStoreSlice({\n  namespace: '@@DURA',\n  state: {\n    REFRESH: 0,\n  },\n  reducers: {\n    UPDATE(state, { payload: { REFRESH } }) {\n      state.REFRESH = REFRESH + Math.random();\n      return state;\n    },\n  },\n  effects: {},\n});\n","import type { ReducersMapObject } from 'redux';\nimport type {\n  ConfiguraOptions,\n  JsonObject,\n  StoreSlice,\n  UnionToIntersection,\n  ExtractStateByStoreUnion,\n  ExtractAction,\n  ReducersMapOfStoreSlice,\n  EffectsMapOfStoreSlice,\n  CreateStoreReturn,\n  EffectsMapOfStore,\n} from '@dura/types';\nimport {\n  compose as reduxCompose,\n  applyMiddleware,\n  combineReducers,\n  createStore,\n} from 'redux';\nimport {\n  defineHiddenConstantProperty,\n  DURA_STORE_EFFECTS,\n  DURA_STORE_REDUCERS,\n  createActionsFactory,\n} from '@dura/utils';\nimport invariant from 'invariant';\nimport duraStoreSlice from './duraStoreSlice';\nimport { DURA_PATCHES_SYMBOL } from '@dura/utils';\nimport { createAsyncMiddleware } from '@dura/async';\nimport { enablePatches, setAutoFreeze, produceWithPatches } from 'immer';\n\nenablePatches();\nsetAutoFreeze(false);\n\nexport const defaultConfiguraOptions: ConfiguraOptions = {\n  middlewares: [],\n  enhancers: [],\n  preloadedState: undefined,\n  compose: reduxCompose,\n};\n\nexport * from './defineStoreSlice';\n\nexport function configura(options?: ConfiguraOptions) {\n  return function create<\n    N extends string,\n    S,\n    R extends ReducersMapOfStoreSlice<S>,\n    E extends EffectsMapOfStoreSlice,\n    STORES extends StoreSlice<N, S, R, E>[] = StoreSlice<N, S, R, E>[],\n    GA = UnionToIntersection<ExtractAction<STORES[number]>>,\n    GS = UnionToIntersection<ExtractStateByStoreUnion<STORES[number]>>\n  >(...stores: STORES): CreateStoreReturn<GS, GA> {\n    const {\n      middlewares = [],\n      enhancers = [],\n      compose = reduxCompose,\n      preloadedState,\n    } = options ?? defaultConfiguraOptions;\n\n    const globalReducers: ReducersMapObject = {};\n    const globalEffects: EffectsMapOfStore = {};\n\n    function UNSAFE_use<\n      N extends string,\n      S,\n      R extends ReducersMapOfStoreSlice<S>,\n      E extends EffectsMapOfStoreSlice,\n      STORES extends StoreSlice<N, S, R, E>[]\n    >(...args: STORES) {\n      let index = -1;\n      while (++index < args.length) {\n        const store = args[index];\n        invariant(\n          !UNSAFE_has(store),\n          'store already exists, please note that the namespace needs to be unique!',\n        );\n        globalReducers[store.namespace] = function (\n          state = store.state,\n          action,\n        ) {\n          const [, reducerName] = action.type.split('/');\n          const [nextState, patches] = produceWithPatches(function (\n            draftState,\n          ) {\n            store.reducers[reducerName]?.(draftState, action);\n          })(state);\n\n          const patchesOfStringify = patches.map(\n            (n) => `${store.namespace}.${n.path.join('.')}`,\n          );\n          defineHiddenConstantProperty(\n            nextState,\n            DURA_PATCHES_SYMBOL,\n            patchesOfStringify,\n          );\n          return nextState;\n        };\n        globalEffects[store.namespace] = store.effects;\n      }\n    }\n\n    function UNSAFE_has<\n      N extends string,\n      S extends JsonObject,\n      R extends ReducersMapOfStoreSlice<S>,\n      E extends EffectsMapOfStoreSlice,\n      STORES extends StoreSlice<N, S, R, E>\n    >(store: STORES) {\n      return store.namespace in globalReducers;\n    }\n\n    function UNSAFE_unUse<\n      N extends string,\n      S extends JsonObject,\n      R extends ReducersMapOfStoreSlice<S>,\n      E extends EffectsMapOfStoreSlice,\n      STORES extends StoreSlice<N, S, R, E>[]\n    >(...args: STORES) {\n      let index = -1;\n      while (++index < args.length) {\n        const store = args[index];\n        delete globalReducers[store.namespace];\n        delete globalEffects[store.namespace];\n      }\n    }\n\n    UNSAFE_use(...stores, duraStoreSlice);\n\n    const reduxStore = createStore(\n      combineReducers(globalReducers),\n      preloadedState,\n      compose(\n        applyMiddleware(\n          ...middlewares,\n          createAsyncMiddleware(\n            (namespace, effectName) => globalEffects[namespace]?.[effectName],\n          ),\n        ),\n        ...enhancers,\n      ),\n    );\n\n    const createActions = createActionsFactory(reduxStore);\n\n    const globalActions = createActions(...stores) as any;\n\n    const duraStore = {\n      use,\n      unUse,\n      refresh,\n      actions: globalActions,\n      ...reduxStore,\n    };\n    defineHiddenConstantProperty(\n      duraStore,\n      DURA_STORE_REDUCERS,\n      globalReducers,\n    );\n    defineHiddenConstantProperty(duraStore, DURA_STORE_EFFECTS, globalEffects);\n\n    function refresh(prefix: string) {\n      reduxStore.dispatch({\n        type: '@@DURA/UPDATE',\n        payload: { REFRESH: prefix },\n      });\n      return duraStore;\n    }\n\n    function use(...args) {\n      UNSAFE_use(...args);\n      const actionSlice = createActions(...args);\n      duraStore.actions = { ...duraStore.actions, ...actionSlice };\n      reduxStore.replaceReducer(combineReducers(globalReducers));\n      return duraStore;\n    }\n\n    function unUse(...args) {\n      UNSAFE_unUse(...args);\n      let index = -1;\n      while (++index < args.length) {\n        const element = args[index];\n        delete duraStore.actions[element.namespace];\n      }\n      reduxStore.replaceReducer(combineReducers(globalReducers));\n      return duraStore;\n    }\n\n    return duraStore as any;\n  };\n}\n"],"names":["defineStoreSlice","store","namespace","state","REFRESH","reducers","UPDATE","_a","Math","random","effects","enablePatches","setAutoFreeze","defaultConfiguraOptions","middlewares","enhancers","preloadedState","undefined","compose","reduxCompose","options","_i","stores","_b","_c","_d","globalReducers","globalEffects","UNSAFE_use","args","index","invariant","UNSAFE_has","action","reducerName","type","split","produceWithPatches","draftState","nextState","patchesOfStringify","map","n","path","join","defineHiddenConstantProperty","DURA_PATCHES_SYMBOL","length","UNSAFE_unUse","duraStoreSlice","reduxStore","createStore","combineReducers","applyMiddleware","createAsyncMiddleware","effectName","createActions","createActionsFactory","globalActions","duraStore","use","unUse","refresh","actions","prefix","dispatch","payload","actionSlice","replaceReducer","element","DURA_STORE_REDUCERS","DURA_STORE_EFFECTS"],"mappings":";;;;;;;;;;;;;;gRAkBgBA,EAKdC,GACA,OAAOA,ECtBT,MAAgC,CAC9BC,UAAW,SACXC,MAAO,CACLC,QAAS,GAEXC,SAAU,CACRC,gBAAOH,EAAOI,OAAaH,oBAEzB,OADAD,EAAMC,QAAUA,EAAUI,KAAKC,SACxBN,IAGXO,QAAS,ICkBXC,kBACAC,iBAAc,OAEDC,EAA4C,CACvDC,YAAa,GACbC,UAAW,GACXC,oBAAgBC,EAChBC,QAASC,sCAKeC,GACxB,OAAO,eAQL,aAAAC,mBAAAA,IAAAC,kBACM,IAAAf,EAKFa,MAAAA,EAAAA,EAAWP,EAJbU,gBAAAT,aAAc,KACdU,cAAAT,aAAY,KACZU,YAAAP,aAAUC,YACVH,mBAGIU,EAAoC,GACpCC,EAAmC,GAEzC,SAASC,QAMP,aAAAP,mBAAAA,IAAAQ,kBAEA,IADA,IAAIC,GAAS,eAEX,IAAM7B,EAAQ4B,EAAKC,GACnBC,WACGC,EAAW/B,GACZ,4EAEFyB,EAAezB,EAAMC,WAAa,SAChCC,EACA8B,gBADA9B,EAAQF,EAAME,OAGR,IAAG+B,EAAeD,EAAOE,KAAKC,MAAM,QACpCb,EAAuBc,sBAAmB,SAC9CC,wBAEArC,EAAMI,UAAS6B,0BAAeI,EAAYL,KAHfI,CAI1BlC,GAJIoC,OAMDC,OAA6BC,KACjC,SAACC,GAAM,OAAGzC,EAAMC,cAAawC,EAAEC,KAAKC,KAAK,QAO3C,OALAC,+BACEN,EACAO,sBACAN,GAEKD,GAETZ,EAAc1B,EAAMC,WAAaD,EAAMS,WA3BhCoB,EAAQD,EAAKkB,YA+BxB,SAASf,EAMP/B,GACA,OAAOA,EAAMC,aAAawB,EAG5B,SAASsB,QAMP,aAAA3B,mBAAAA,IAAAQ,kBAEA,IADA,IAAIC,GAAS,IACJA,EAAQD,EAAKkB,QAAQ,CAC5B,IAAM9C,EAAQ4B,EAAKC,UACZJ,EAAezB,EAAMC,kBACrByB,EAAc1B,EAAMC,YAI/B0B,iBAAcN,GAAQ2B,KAEtB,IAAMC,EAAaC,cACjBC,kBAAgB1B,GAChBV,EACAE,kBACEmC,iCACKvC,GACHwC,yBACE,SAACpD,EAAWqD,0BAAe5B,EAAczB,yBAAaqD,UAGvDxC,KAIDyC,EAAgBC,uBAAqBP,GAErCQ,EAAgBF,eAAiBlC,GAEjCqC,KACJC,MACAC,QACAC,UACAC,QAASL,GACNR,GASL,SAASY,EAAQE,GAKf,OAJAd,EAAWe,SAAS,CAClB9B,KAAM,gBACN+B,QAAS,CAAE9D,QAAS4D,KAEfL,EAGT,SAASC,QAAI,aAAAvC,mBAAAA,IAAAQ,kBACXD,eAAcC,GACd,IAAMsC,EAAcX,eAAiB3B,GAGrC,OAFA8B,EAAUI,eAAeJ,EAAUI,SAAYI,GAC/CjB,EAAWkB,eAAehB,kBAAgB1B,IACnCiC,EAGT,SAASE,QAAM,aAAAxC,mBAAAA,IAAAQ,kBACbmB,eAAgBnB,GAEhB,IADA,IAAIC,GAAS,IACJA,EAAQD,EAAKkB,QAAQ,CAC5B,IAAMsB,EAAUxC,EAAKC,UACd6B,EAAUI,QAAQM,EAAQnE,WAGnC,OADAgD,EAAWkB,eAAehB,kBAAgB1B,IACnCiC,EAGT,OAlCAd,+BACEc,EACAW,sBACA5C,GAEFmB,+BAA6Bc,EAAWY,qBAAoB5C,GA6BrDgC"}