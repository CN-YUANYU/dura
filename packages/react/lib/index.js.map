{"version":3,"file":"index.js","sources":["../src/useUpdate.ts","../src/useMount.tsx","../src/useMonitor.tsx","../src/index.ts"],"sourcesContent":["import { useReducer } from \"react\";\n\nconst updateReducer = (num: number): number => (num + 1) % 1_000_000;\n\nexport function useUpdate(): Function {\n  const [, update] = useReducer(updateReducer, 0);\n  return update;\n}\n","import { useLayoutEffect } from \"react\";\nimport { useUpdate } from \"./useUpdate\";\n\nexport function getUseMount(mount, unMount) {\n  return function useMount() {\n    const update = useUpdate();\n    useLayoutEffect(() => {\n      mount();\n      update();\n      return () => {\n        unMount();\n        update();\n      };\n    }, []);\n  };\n}\n","import { useRef, useLayoutEffect, useCallback } from \"react\";\nimport { DURA_PATCHES_SYMBOL, createProxy } from \"@dura/utils\";\nimport { useUpdate } from \"./useUpdate\";\n\nexport function getUseMonitor(key, reduxStore) {\n  return function useMonitor(subscribeDeps) {\n    const update = useUpdate();\n    const deps = useRef<Map<string, number>>(new Map<string, number>());\n    const storeProxyRef = useRef(\n      createProxy(reduxStore.getState(), deps.current)\n    );\n    const storeOriginalRef = useRef(reduxStore.getState());\n\n    const subscribe = useCallback(() => {\n      const originalStore = reduxStore.getState();\n\n      const proxyStore = createProxy(originalStore, deps.current);\n      const memo = deepEqualProxyStore(proxyStore, deps.current, key);\n\n      if (!memo) {\n        storeProxyRef.current = proxyStore;\n        storeOriginalRef.current = originalStore;\n        deps.current.clear();\n        update();\n      }\n    }, []);\n\n    useLayoutEffect(() => reduxStore.subscribe(subscribe), []);\n\n    useLayoutEffect(() => {\n      const originalStore = reduxStore.getState();\n      storeProxyRef.current = createProxy(originalStore, deps.current);\n      storeOriginalRef.current = originalStore;\n      deps.current.clear();\n      update();\n    }, subscribeDeps);\n    return storeProxyRef.current;\n  };\n}\n\nfunction deepEqualProxyStore<P, D extends Map<string, number>>(\n  nextPropsStore: P,\n  deps: D,\n  key\n) {\n  const values = Object.values(nextPropsStore);\n\n  if (\n    key &&\n    nextPropsStore[\"@@DURA\"][DURA_PATCHES_SYMBOL].includes(\"@@DURA.REFRESH\") &&\n    nextPropsStore[\"@@DURA\"][\"REFRESH\"].startsWith(key)\n  ) {\n    return false;\n  }\n\n  let index = -1;\n  while (++index < values.length) {\n    const patches = values[index][DURA_PATCHES_SYMBOL];\n    if (patches?.length > 0) {\n      const hasDependencies = patches.some((n: string) => deps.has(n));\n      if (hasDependencies) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n","import { configura as coreConfigura, defineStoreSlice } from \"@dura/core\";\nimport type {\n  ConfiguraOptions,\n  JsonObject,\n  ReducersMapOfStoreSlice,\n  EffectsMapOfStoreSlice,\n  StoreSlice,\n  UnionToIntersection,\n  ExtractAction,\n  ExtractStateByStoreUnion,\n  CreateStoreReturn,\n} from \"@dura/types\";\nimport { getUseMount } from \"./useMount\";\nimport { getUseMonitor } from \"./useMonitor\";\nimport { createActionsFactory } from \"@dura/utils\";\nimport { useMemo } from \"react\";\n\nexport interface Return<S, A> extends CreateStoreReturn<S, A> {\n  useMount: () => void;\n  useStore: <T>(deps?: T[]) => S;\n  useActions: () => A;\n}\n\nexport interface Next<SS, A> {\n  <\n    N extends string,\n    S extends JsonObject,\n    R extends ReducersMapOfStoreSlice<S>,\n    E extends EffectsMapOfStoreSlice,\n    STORES extends StoreSlice<N, S, R, E>[] = StoreSlice<N, S, R, E>[],\n    GA = UnionToIntersection<ExtractAction<STORES[number]>>,\n    GS = UnionToIntersection<ExtractStateByStoreUnion<STORES[number]>>\n  >(\n    ...stores: STORES\n  ): Return<GS & SS, GA & A>;\n}\n\nexport { defineStoreSlice };\n\nexport function configura(options?: ConfiguraOptions) {\n  return function create<\n    N extends string,\n    S extends JsonObject,\n    R extends ReducersMapOfStoreSlice<S>,\n    E extends EffectsMapOfStoreSlice,\n    STORES extends StoreSlice<N, S, R, E>[] = StoreSlice<N, S, R, E>[],\n    GA = UnionToIntersection<ExtractAction<STORES[number]>>,\n    GS = UnionToIntersection<ExtractStateByStoreUnion<STORES[number]>>\n  >(...stores: STORES): Next<GS, GA> {\n    const createStore = coreConfigura(options);\n\n    const duraStore = createStore(...stores);\n\n    return function next(...nextStores) {\n      const key = nextStores.map((n) => n.namespace).join(\".\");\n\n      const moment = () => duraStore.use(...nextStores).refresh(key);\n      const unMoment = () => duraStore.unUse(...nextStores).refresh(key);\n\n      const useMount = getUseMount(moment, unMoment);\n\n      const useStore = (deps = []) => getUseMonitor(key, duraStore)(deps);\n\n      const useActions = function () {\n        const createActions = createActionsFactory(duraStore);\n        return useMemo(() => createActions(...stores, ...nextStores), []);\n      };\n\n      const duraReact = {\n        ...duraStore,\n        useMount,\n        useStore,\n        useActions,\n      };\n\n      return duraReact;\n    } as any;\n  };\n}\n"],"names":["updateReducer","num","useUpdate","useReducer","getUseMount","mount","unMount","update","useLayoutEffect","getUseMonitor","key","reduxStore","subscribeDeps","deps","useRef","Map","storeProxyRef","createProxy","getState","current","storeOriginalRef","subscribe","useCallback","originalStore","proxyStore","nextPropsStore","values","Object","DURA_PATCHES_SYMBOL","includes","startsWith","index","length","patches","some","n","has","deepEqualProxyStore","clear","options","_i","stores","createStore","coreConfigura","duraStore","nextStores","map","namespace","join","moment","use","refresh","unMoment","unUse","useMount","useStore","useActions","createActions","createActionsFactory","useMemo","duraReact"],"mappings":"khBAEA,IAAMA,EAAgB,SAACC,GAAwB,OAACA,EAAM,GAAK,cAE3CC,IAEd,OADmBC,aAAWH,EAAe,eCF/BI,EAAYC,EAAOC,GACjC,OAAO,WACL,IAAMC,EAASL,IACfM,mBAAgB,WAGd,OAFAH,IACAE,IACO,WACLD,IACAC,OAED,cCTSE,EAAcC,EAAKC,GACjC,OAAO,SAAoBC,GACzB,IAAML,EAASL,IACTW,EAAOC,SAA4B,IAAIC,KACvCC,EAAgBF,SACpBG,cAAYN,EAAWO,WAAYL,EAAKM,UAEpCC,EAAmBN,SAAOH,EAAWO,YAErCG,EAAYC,eAAY,WAC5B,IAAMC,EAAgBZ,EAAWO,WAE3BM,EAAaP,cAAYM,EAAeV,EAAKM,UAwBzD,SACEM,EACAZ,EACAH,GAEA,IAAMgB,EAASC,OAAOD,OAAOD,GAE7B,GACEf,GACAe,EAAe,UAAUG,uBAAqBC,SAAS,mBACvDJ,EAAe,UAAmB,QAAEK,WAAWpB,GAE/C,OAAO,EAGT,IAAIqB,GAAS,EACb,OAASA,EAAQL,EAAOM,QAAQ,CAC9B,IAAMC,EAAUP,EAAOK,GAAOH,uBAC9B,IAAIK,MAAAA,SAAAA,EAASD,QAAS,EAEpB,GADwBC,EAAQC,MAAK,SAACC,GAAc,OAAAtB,EAAKuB,IAAID,MAE3D,OAAO,EAIb,OAAO,GAhDUE,CAAoBb,EAAYX,EAAKM,QAAST,KAGzDM,EAAcG,QAAUK,EACxBJ,EAAiBD,QAAUI,EAC3BV,EAAKM,QAAQmB,QACb/B,OAED,IAWH,OATAC,mBAAgB,WAAM,OAAAG,EAAWU,UAAUA,KAAY,IAEvDb,mBAAgB,WACd,IAAMe,EAAgBZ,EAAWO,WACjCF,EAAcG,QAAUF,cAAYM,EAAeV,EAAKM,SACxDC,EAAiBD,QAAUI,EAC3BV,EAAKM,QAAQmB,QACb/B,MACCK,GACII,EAAcG,gJCGCoB,GACxB,OAAO,eAQL,aAAAC,mBAAAA,IAAAC,kBACA,IAAMC,EAAcC,YAAcJ,GAE5BK,EAAYF,eAAeD,GAEjC,OAAO,eAAc,aAAAD,mBAAAA,IAAAK,kBACnB,IAAMnC,EAAMmC,EAAWC,KAAI,SAACX,GAAM,OAAAA,EAAEY,aAAWC,KAAK,KAE9CC,EAAS,WAAM,OAAAL,EAAUM,UAAVN,EAAiBC,GAAYM,QAAQzC,IACpD0C,EAAW,WAAM,OAAAR,EAAUS,YAAVT,EAAmBC,GAAYM,QAAQzC,IAExD4C,EAAWlD,EAAY6C,EAAQG,GAE/BG,EAAW,SAAC1C,GAAc,oBAAdA,MAAcJ,EAAcC,EAAKkC,EAAnBnC,CAA8BI,IAExD2C,EAAa,WACjB,IAAMC,EAAgBC,uBAAqBd,GAC3C,OAAOe,WAAQ,WAAM,OAAAF,iBAAiBhB,EAAWI,MAAa,KAG1De,SACDhB,IACHU,WACAC,WACAC,eAGF,OAAOI"}